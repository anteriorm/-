#С клавиатуры вводится два числа K и N. Квадратная матрица А(N,N), состоящая из 4-х равных по размерам подматриц, B,C,D,E заполняется случайным образом целыми числами в интервале [-10,10]. Для тестирования использовать не случайное заполнение, а целенаправленное.
#14.Формируется матрица F следующим образом: если в В количество чисел, меньших К в нечетных столбцах в области 3 больше, чем сумма чисел в четных строках в области 2, то поменять в Е симметрично области 3 и 2 местами, иначе В и Е поменять местами несимметрично. При этом матрица А не меняется. После чего вычисляется выражение: ((К*A)*F– K*AT . Выводятся по мере формирования А, F и все матричные операции последовательно.
import random
import sys

# Ввод K и N
K = int(input("Введите число K: "))
N = int(input("Введите число N: "))

# Создание матрицы A
if N % 2 == 0:
    A = [[random.randint(-10, 10) for _ in range(int(N))] for _ in range(int(N))]
else:
    sys.exit('Количество n должно быть чётным')

# Создание подматриц B, C, D, E
B = [[A[j][i] for i in range(int(N/2))]for j in range(int(N/2))]
C = [[A[j][i+int(N/2)] for i in range(int(N/2))]for j in range(int(N/2))]
D = [[A[j+int(N/2)][i] for i in range(int(N/2))]for j in range(int(N/2))]
E = [[A[j+int(N/2)][i+int(N/2)] for i in range(int(N/2))]for j in range(int(N/2))]

# Формирование матрицы F
if sum([1 for i in range(N//2) for j in range(N//2) if B[i][j] < K and j%2 == 1]) > sum([sum(E[i][N//2-j-1] for j in range(N//2)) for i in range(N//2) if i%2 == 0]):
    # Поменять в E симметрично области 3 и 2 местами
    for i in range(N//4):
        for j in range(N//4):
            E[i][j], E[N//4+i][N//4+j] = E[N//4+i][N//4+j], E[i][j]
else:
    # Поменять В и Е несимметрично
    B, E = E, B

# Создание матрицы F
F = [[0 for j in range(N)] for i in range(N)]
for i in range(N//2):
    for j in range(N//2):
        F[i][j] = B[i][j]
        F[i][N//2+j] = C[i][j]
        F[N//2+i][j] = D[i][j]
        F[N//2+i][N//2+j] = E[i][j]

# Вычисление выражения ((К*A)F– KAT
KA = [[K*A[i][j] for j in range(N)] for i in range(N)]
KAT = [[sum([A[j][k]*KA[k][i] for k in range(N)]) for i in range(N)] for j in range(N)]
KF = [[sum([F[j][k]*KA[k][i] for k in range(N)]) for i in range(N)] for j in range(N)]
result = [[KF[i][j] - KAT[i][j] for j in range(N)] for i in range(N)]

# Вывод матриц
print("Матрица A:")
for row in A:
    print(row)
print("Матрица B:")
for row in B:
    print(row)
print("Матрица C:")
for row in C:
    print(row)
print("Матрица D:")
for row in D:
    print(row)
print("Матрица E:")
for row in E:
    print(row)
print("Матрица F:")
for row in F:
    print(row)
print("Выражение ((К*A)F– KAT:")
for row in result:
    print(row)
