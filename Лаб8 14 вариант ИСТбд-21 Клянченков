import tkinter as tk
from tkinter import filedialog, messagebox
import matplotlib.pyplot as plt
import csv


class BankDeposit:
    def __init__(self, deposit_id, deposit_type, amount):
        self.deposit_id = deposit_id
        self.deposit_type = deposit_type
        self.amount = amount


class DepositManager:
    def __init__(self):
        self.deposits = []

    def load_from_file(self, filename):
        try:
            with open(filename, 'r', encoding='utf-8') as file:
                data = file.read()
                lines = data.split('\n')
                for line in lines:
                    row = line.strip().split(',')
                    if len(row) != 3:
                        raise ValueError("Неверный формат данных")
                    deposit_id, deposit_type, amount = row
                    self.deposits.append(BankDeposit(deposit_id, deposit_type, float(amount)))
            return True
        except Exception as e:
            messagebox.showerror("Ошибка", f"Ошибка при чтении файла: {e}")
            return False

    def segment_by_type(self):
        segmentation = {}
        for deposit in self.deposits:
            if deposit.deposit_type not in segmentation:
                segmentation[deposit.deposit_type] = []
            segmentation[deposit.deposit_type].append(deposit)
        return segmentation

    def segment_by_amount(self):
        segmentation = {'мелкие': [], 'средние': [], 'крупные': []}
        for deposit in self.deposits:
            if deposit.amount < 20000:
                segmentation['мелкие'].append(deposit)
            elif 20000 <= deposit.amount < 50000:
                segmentation['средние'].append(deposit)
            else:
                segmentation['крупные'].append(deposit)
        return segmentation


class App:
    def __init__(self, root):
        self.manager = DepositManager()
        self.root = root
        self.root.title("Управление банковскими вкладами")

        self.load_button = tk.Button(root, text="Загрузить данные", command=self.load_data)
        self.load_button.pack(pady=10)

        self.segment_type_button = tk.Button(root, text="Сегментация по видам", command=self.visualize_by_type)
        self.segment_type_button.pack(pady=10)

        self.segment_amount_button = tk.Button(root, text="Сегментация по типам", command=self.visualize_by_amount)
        self.segment_amount_button.pack(pady=10)

    def load_data(self):
        filename = filedialog.askopenfilename(title="Выберите файл", filetypes=[("Text files", "*.txt")])
        if filename:
            if self.manager.load_from_file(filename):
                messagebox.showinfo("Успех", "Данные успешно загружены")

    def visualize_by_type(self):
        segmentation = self.manager.segment_by_type()
        labels = segmentation.keys()
        sizes = [len(segmentation[deposit_type]) for deposit_type in labels]

        plt.figure(figsize=(8, 8))
        plt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=140)
        plt.title('Сегментация вкладов по видам')
        plt.show()

    def visualize_by_amount(self):
        segmentation = self.manager.segment_by_amount()
        labels = segmentation.keys()
        sizes = [len(segmentation[amount_type]) for amount_type in labels]

        plt.figure(figsize=(8, 8))
        plt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=140)
        plt.title('Сегментация вкладов по типам (мелкие, средние, крупные)')
        plt.show()


if __name__ == "__main__":
    root = tk.Tk()
    app = App(root)
    root.mainloop()
